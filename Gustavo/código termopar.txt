#include <Arduino.h>
#include "max6675.h"
#include <esp_log.h>

/////////////////////////////////DEFINIÇÃO DE PINOS//////////////////////////
#define BUFFER_ACS712 13
#define BT_CONFIG 15
#define OUT_RPM 33
#define SCK_MAX6675 25
#define CS_MAX6675 26
#define SO_MAX6675 27
#define LED_VM 18
#define LED_VD 19
#define LED 2

bool flag_timer0 = true; 

hw_timer_t *Timer0_Cfg = NULL;

void IRAM_ATTR Timer0_ISR()
{
  flag_timer0 = 0; 
}

 /////////////////////////////////DECLARAÇÃO DE VARIÁVEIS GLOBAIS//////////////////////////

  int delay1s_temp = 0;
  float temp1 = 0;
  float electric_current = 0;

  /////////////////////////////////CONFIGURAÇÕES MAX 6675 (TERMOPAR TIPO K)//////////////////////////

  MAX6675 temp(SCK_MAX6675, CS_MAX6675, SO_MAX6675);

  /////////////////////////////////CONFIGURAÇÕES DE HARDWARE E FIRMWARE//////////////////////////
  void setup()
  {
    pinMode(LED, OUTPUT);

    Timer0_Cfg = timerBegin(0, 80, true);

    timerAttachInterrupt(Timer0_Cfg, &Timer0_ISR, true);

    timerAlarmWrite(Timer0_Cfg, 1000000, true);
    
    timerAlarmEnable(Timer0_Cfg);
    
    pinMode(LED_VM, OUTPUT);
    
    pinMode(LED_VD, OUTPUT);
    
    digitalWrite(LED, LOW);
    digitalWrite(LED_VM, LOW);
    digitalWrite(LED_VD, LOW);
    
    Serial.begin(115200);
    
  }

  void loop()
  {
    if (millis() - delay1s_temp == 1000)
    {
      Serial.print("Temperatura: ");
      temp1 = temp.readCelsius();
      Serial.print(temp1);
      Serial.println("°C");
      delay1s_temp = millis();
    }

    if (temp1 >= 35)
    {
      digitalWrite(LED, !digitalRead(LED_VM));
      //digitalWrite(LED_VD, !digitalRead(LED_VD));
    }
    else
    {
      digitalWrite(LED, LOW);
      //digitalWrite(LED_VD, LOW);
    }
   
  }